{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\edith_000\\\\Documents\\\\Cecyt 9\\\\bureau manager\\\\respladito\\\\bureau-project\\\\src\\\\componentes\\\\verificacion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Importa las librerías necesarias\n\n// Componente de verificación en dos pasos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Verificacion = () => {\n  _s();\n  // Estado para almacenar el código ingresado\n  const [codigo, setCodigo] = useState('');\n  // Estado para controlar si el código es incorrecto\n  const [codigoIncorrecto, setCodigoIncorrecto] = useState(false);\n  // Estado para controlar si se ha enviado el código\n  const [codigoEnviado, setCodigoEnviado] = useState(false);\n\n  // Función para manejar el cambio en el campo de texto\n  const handleChangeCodigo = event => {\n    setCodigo(event.target.value);\n  };\n\n  // Función para manejar el envío del código\n  const handleSubmitCodigo = event => {\n    event.preventDefault();\n\n    // Comprueba si el código es correcto\n    if (codigo === 'codigoCorrecto') {\n      // Código correcto, realiza la acción deseada\n      console.log('Código correcto');\n    } else {\n      // Código incorrecto, muestra el mensaje de error\n      setCodigoIncorrecto(true);\n    }\n  };\n\n  // Función para manejar el reenvío del código\n  const handleReenviarCodigo = () => {\n    // Lógica para reenviar el código\n    console.log('Código reenviado');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Verificaci\\xF3n en dos pasos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Para poder continuar, por favor, ingrese el c\\xF3digo de verificaci\\xF3n que se le ha enviado a su correo electr\\xF3nico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Verificacion, \"G7P3nxtDTjX2rBmWVNC202ayu+4=\");\n_c = Verificacion;\nexport default Verificacion;\nvar _c;\n$RefreshReg$(_c, \"Verificacion\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Verificacion","_s","codigo","setCodigo","codigoIncorrecto","setCodigoIncorrecto","codigoEnviado","setCodigoEnviado","handleChangeCodigo","event","target","value","handleSubmitCodigo","preventDefault","console","log","handleReenviarCodigo","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/edith_000/Documents/Cecyt 9/bureau manager/respladito/bureau-project/src/componentes/verificacion.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Importa las librerías necesarias\r\n\r\n// Componente de verificación en dos pasos\r\nconst Verificacion = () => {\r\n    // Estado para almacenar el código ingresado\r\n    const [codigo, setCodigo] = useState('');\r\n    // Estado para controlar si el código es incorrecto\r\n    const [codigoIncorrecto, setCodigoIncorrecto] = useState(false);\r\n    // Estado para controlar si se ha enviado el código\r\n    const [codigoEnviado, setCodigoEnviado] = useState(false);\r\n\r\n    // Función para manejar el cambio en el campo de texto\r\n    const handleChangeCodigo = (event) => {\r\n        setCodigo(event.target.value);\r\n    };\r\n\r\n    // Función para manejar el envío del código\r\n    const handleSubmitCodigo = (event) => {\r\n        event.preventDefault();\r\n\r\n        // Comprueba si el código es correcto\r\n        if (codigo === 'codigoCorrecto') {\r\n            // Código correcto, realiza la acción deseada\r\n            console.log('Código correcto');\r\n        } else {\r\n            // Código incorrecto, muestra el mensaje de error\r\n            setCodigoIncorrecto(true);\r\n        }\r\n    };\r\n\r\n    // Función para manejar el reenvío del código\r\n    const handleReenviarCodigo = () => {\r\n        // Lógica para reenviar el código\r\n        console.log('Código reenviado');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit>\r\n            <h1>Verificación en dos pasos</h1>\r\n            <div className='form-group'>\r\n                <p>Para poder continuar, por favor, ingrese el código de verificación que se le \r\n                    ha enviado a su correo electrónico\r\n                </p>\r\n            </div>    \r\n\r\n        </form>    \r\n    );\r\n};\r\n\r\nexport default Verificacion;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC;EACA,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/D;EACA,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA,MAAMW,kBAAkB,GAAIC,KAAK,IAAK;IAClCN,SAAS,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAIH,KAAK,IAAK;IAClCA,KAAK,CAACI,cAAc,CAAC,CAAC;;IAEtB;IACA,IAAIX,MAAM,KAAK,gBAAgB,EAAE;MAC7B;MACAY,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAClC,CAAC,MAAM;MACH;MACAV,mBAAmB,CAAC,IAAI,CAAC;IAC7B;EACJ,CAAC;;EAED;EACA,MAAMW,oBAAoB,GAAGA,CAAA,KAAM;IAC/B;IACAF,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EACnC,CAAC;EAED,oBACIhB,OAAA;IAAMkB,QAAQ;IAAAC,QAAA,gBACVnB,OAAA;MAAAmB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCvB,OAAA;MAAKwB,SAAS,EAAC,YAAY;MAAAL,QAAA,eACvBnB,OAAA;QAAAmB,QAAA,EAAG;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEf,CAAC;AAACrB,EAAA,CA5CID,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}